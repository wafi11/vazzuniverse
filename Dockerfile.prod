FROM node:22-alpine AS deps
WORKDIR /app
COPY package*.json ./
RUN npm ci

FROM node:22-alpine AS builder
WORKDIR /app
COPY . .
COPY --from=deps /app/node_modules ./node_modules

# Generate Prisma client before building
RUN npx prisma generate
RUN npm run build

FROM node:22-alpine AS runner
WORKDIR /app
ENV NODE_ENV production

# Add a non-root user for security
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Set ownership during copy instead of a separate chown command
COPY --from=builder --chown=nextjs:nodejs /app/next.config.mjs ./
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder --chown=nextjs:nodejs /app/package.json ./package.json

# Only copy essential Prisma files with correct ownership
COPY --from=builder --chown=nextjs:nodejs /app/prisma ./prisma

# For node_modules, only copy what's necessary with correct ownership
COPY --from=builder --chown=nextjs:nodejs /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder --chown=nextjs:nodejs /app/node_modules/@prisma ./node_modules/@prisma

# Create a production-optimized node_modules instead of copying everything
COPY --from=builder --chown=nextjs:nodejs /app/package*.json ./
RUN npm ci --only=production

USER nextjs
EXPOSE 4000

# Generate Prisma client again in the runner stage
RUN npx prisma generate

CMD ["npm", "start"]